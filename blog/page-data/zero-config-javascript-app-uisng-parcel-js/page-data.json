{"componentChunkName":"component---src-templates-blog-post-js","path":"/zero-config-javascript-app-uisng-parcel-js/","result":{"data":{"site":{"siteMetadata":{"title":"Albsugy Blog"}},"markdownRemark":{"id":"dc8637a8-967d-59e9-b4b3-0cbf8fd089bd","excerpt":"What is Parcel and Why Use It? Parcel is an asset bundler for modern applications. It offers a blazing fast compilation time and zero configuration. Simply put…","html":"<h3>What is Parcel and Why Use It?</h3>\n<p>Parcel is an asset bundler for modern applications. It offers a blazing fast compilation time and zero configuration. Simply put, parcel allows simplicity in compiling file assets. Out of the box, parcel can be used on a large code base or just a very basic application that requires compilation of file assets.</p>\n<p>According to the creator of Parcel, the intention was to solve two main problems with existing popular module bundlers like Browserify and Webpack: performance and hassles during configuration. With Parcel you can easily load modules with either commonJS and ES6 module syntax, as we will see later in this article.</p>\n<p>With Over 12,000 stars already on Github. Parcel has surely gained a lot of attention from the community.</p>\n<p>Some of ParcelJS features:</p>\n<ul>\n<li>Blazing fast bundling</li>\n<li>Out of the box support for css, js, HTML, images, file assets and no need to install plugins to carry out all this</li>\n<li>A built in development server.</li>\n</ul>\n<h3>Getting Started</h3>\n<p>Getting started and setting up Parcel is incredibly simple. Install Parcel globally on your machine with:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g parcel-bundler</code></pre></div>\n<p>If you are on unix, you might need to do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g parcel-bundler</code></pre></div>\n<p>Create a directory and intialize by creating a <code class=\"language-text\">package.json</code> file in the newly created project directory:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> parcel-project</code></pre></div>\n<p>Now change directory and initialize a node project:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> parcel-project \n\n<span class=\"token function\">npm</span> init -y</code></pre></div>\n<p>This will create a <code class=\"language-text\">package.json</code> with default settings within the project directory.</p>\n<h3>Set Up Entry Point</h3>\n<p>Parcel accepts files like HTML and JavaScript as an entry point. Create these files:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> index.html <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">touch</span> index.js</code></pre></div>\n<p>Add the relative path to your JavaScript file in the <code class=\"language-text\">index.html</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>en<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>X-UA-Compatible<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ie=edge<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Parcel Project<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./index.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Now open <code class=\"language-text\">index.js</code> and write:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"App init!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Start Server</h3>\n<p>Update <code class=\"language-text\">package.json</code> file with a script to run parcel built in server.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n...\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"parcel index.html\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n ...\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Start the server :</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> run start</code></pre></div>\n<p>Apart from starting a local server on port <code class=\"language-text\">1234</code>, Parcel will automatically create a <code class=\"language-text\">dist</code> folder</p>\n<p>Within the new <code class=\"language-text\">dist</code>’ folder created, the new js file <code class=\"language-text\">parcel-project.js</code>’ contains the compiled code by parcel and also included is a new <code class=\"language-text\">index.html</code> file.</p>\n<h3>Code Splitting</h3>\n<p>To better demonstrate some other features of Parcel, lets import modules from a different files. Parcel supports both CommonJs and Es6 module syntax for importing files.</p>\n<h3>CommonJS Syntax</h3>\n<p>Create a new file:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> data.js</code></pre></div>\n<p>then add the folowing:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ./data.js </span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Medhat Albsugy\"</span><span class=\"token punctuation\">,</span>\n    designation<span class=\"token operator\">:</span> <span class=\"token string\">\"Software Developer\"</span><span class=\"token punctuation\">,</span>\n    hobby<span class=\"token operator\">:</span> <span class=\"token string\">\"design!\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, require this module and access properties within it from <code class=\"language-text\">index.js</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ./index.js</span>\n<span class=\"token keyword\">const</span> details <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"My name is \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" I am a \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>designation <span class=\"token operator\">+</span> <span class=\"token string\">\" and I love \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>hobby<span class=\"token punctuation\">;</span>\n\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> content<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Here we required the module and write the content within it into the DOM.</p>\n<h3>Es6 Module Syntax</h3>\n<p>Lets do the same by using Es6 Module syntax. Change the content within <code class=\"language-text\">./data.js</code> to :</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> details <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"Medhat Albsugy\"</span><span class=\"token punctuation\">,</span>\n    designation<span class=\"token operator\">:</span> <span class=\"token string\">\"Software Developer\"</span><span class=\"token punctuation\">,</span>\n    hobby<span class=\"token operator\">:</span> <span class=\"token string\">\"design!\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In order to avoid undefined properties, change the mode of importing modules within <code class=\"language-text\">index.js</code> so that it can conform with ES6 Syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// ./index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> details <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./data'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> content <span class=\"token operator\">=</span> <span class=\"token string\">\"My name is \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" I am a \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>designation <span class=\"token operator\">+</span> <span class=\"token string\">\" and I love \"</span> <span class=\"token operator\">+</span> details<span class=\"token punctuation\">.</span>hobby<span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> content<span class=\"token punctuation\">;</span></code></pre></div>\n<p>The result should still be the same.</p>\n<h3>Hot Module Replacement</h3>\n<p>For improved development experience, Parcel’s hot module reloading implementation automatically updates modules in the browser without the need to refresh the page. This support is for both JavaScript and CSS assets. Lets try this out. Change the contents within <code class=\"language-text\">./data.js</code> and see the live update immediately your files are been saved.</p>\n<h3>Transform</h3>\n<p>Another awesome feature of Parcel is the support for common transforms and transpilers like Babel, PostCSS and PostHTML. Babel can be used to transform JavaScript, PostCSS for CSS and PostHTML for HTML. Each one of these transpilers has a unique configuration file and once Parcel finds anyone of the config files, it will automatically run these transforms.</p>\n<h3>Working with Sass</h3>\n<p>To work with Sass we will need to install <code class=\"language-text\">node-sass</code> package:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> node-sass</code></pre></div>\n<p>Now create a sass file</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> style.scss</code></pre></div>\n<p>Add some styling and import <code class=\"language-text\">style.scss</code> to <code class=\"language-text\">index.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// .index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./style.scss'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Parcel is still a new bundler and certainly will have more features added by the creator. There is no better bundler than another, I strongly believe in choosing the right tool for the job. But if you love simplicity and ease of set up, you definitely want to try parcel.</p>","frontmatter":{"title":"Zero Config JavaScript App using ParcelJS","date":"June 28, 2018","description":"I will like to present to you in this article, a new JavaScript bundler called Parcel. despite having numerous bundlers that carry out practically the same functionality but different and separate modes of configuration."}}},"pageContext":{"slug":"/zero-config-javascript-app-uisng-parcel-js/","previous":{"fields":{"slug":"/building-a-blog-with-next-js-and-butter-cms/"},"frontmatter":{"title":"Building a Blog with Next.js and ButterCMS"}},"next":{"fields":{"slug":"/using-react-js-with-sitecore/"},"frontmatter":{"title":"Using React.js with Sitecore"}}}}}